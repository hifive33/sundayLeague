<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sundayleague.main.dao.TeamMapper">
	<update id="insertTeam" parameterType="map"
		statementType="CALLABLE">
		{call sp_insert_team(
		#{team.team_name},
		#{team.team_comment},
		#{team.region},
		#{id}
		)
		}
	</update>

	<!-- Myteam Team select구문 -->
	<select id="selectTeam" resultType="TeamDTO"
		parameterType="String">
		select * from team where team_name = #{team_name}

	</select>
	<!-- Myteam Player List select구문 -->
	<select id="selectTeam2" resultType="PlayerDTO"
		parameterType="String">
		select * from player where team_name = #{team_name}

	</select>
	<select id="selectTeam3" resultType="PlayerDTO"
		parameterType="String">
		select player_id,to_char(birth,'yyyy') as birth from player where team_name = #{team_name}

	</select>
	
		<select id="selectTeam4" resultType="PlayerDTO"
		parameterType="String">
		select * from player where team_name = #{team_name} and authority = 0

	</select>
	
	<select id="getTeamCount" parameterType="map" resultType="int">
		SELECT
		count(*)
		FROM
		team
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="region != ''">
				region like #{region}||'%'
			</if>
			<if test="searchWord != ''">
				AND team_name like '%'||#{searchWord}||'%'
			</if>
			<if test="true">
				and deleted_flag=1
			</if>
		</trim>
	</select>
	<select id="selectTeamList" resultType="TeamDTO" parameterType="Map">
		SELECT
			team_name
			, victory
			, defeat
			, draw
			, rating
			, to_char(established, 'yyyy-mm-dd') as established
			, headcount
			, team_comment
			, region
			, deleted_flag
			, accpet_flag
		FROM
			team
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="region != ''">
				region like #{region}||'%'
			</if>
			<if test="searchWord != ''">
				AND team_name like '%'||#{searchWord}||'%'
			</if>
			<if test="true">
				and deleted_flag=1
			</if>
		</trim>
		ORDER BY
			rating DESC
	</select>

	<update id="deleteTeam" parameterType="String"
		statementType="CALLABLE">
		{call sp_delete_team(
		#{team_name}
		)
		}
	</update>
	
	<update id="updateMatch_flag" parameterType="TeamDTO">
		<selectKey resultType="String" keyProperty="match_flag" order="BEFORE">
			select
	        	match_flag
	        from
	        	team
	        where
	        	team_name = #{team_name}
		</selectKey>
		update
			team
		set
			<choose>
				<when test="match_flag == 1">
					match_flag = '0'
					,match_address = null
					,match_day = null
				</when>
				<otherwise>
					match_flag = '1'
					,match_day = #{match_day}
					<if test="match_address != null">
					,match_address = #{match_address}
					</if>
				</otherwise>
			</choose>
		where
			team_name = #{team_name}
	</update>
	<select id="getMatch_flag" parameterType="String" resultType="String">
		select
			match_flag
		from
			team
		where
			team_name = #{team_name}
	</select>
	<select id="selectMatchTeamList" resultType="TeamMatchingDTO">
		select
			team_name as name
			, victory as win
			, defeat as lose
			, draw as draw
			, rating as rating
			, substr(region, 0, 2) as region
			, nvl2(match_address, '1', '0') as stadium
			, match_address
			, match_day
		from
			team
		where
			match_flag = '1'
	</select>
	<select id="selectMatch" parameterType="String" resultType="MatchDTO">
		select
			match_no
			,team_name
		    ,away_team_name
		    ,matchdate
		    ,match_address
		from
		(
		    select
		        match_no
		        ,team_name
		    	,away_team_name
			    ,matchdate
			    ,match_address
		    from
		        match
			where
				team_name = #{team_name} or away_team_name = #{team_name} 
		    order by
		        matchdate desc
		)
		where
		    rownum = 1
	</select>
	
	<update id="countUpHeadcount" parameterType="TeamDTO">
		<selectKey resultType="int" keyProperty="headcount" order="BEFORE">
			select
	        	headcount + 1
	        from
	        	team
	        where
	        	team_name = #{team_name}
		</selectKey>
		update
			team
		set
			headcount = #{headcount}
		where
			team_name = #{team_name}
	</update>
	
	<select id="selectMatch2" parameterType="String" resultType="MatchDTO">
	select
		 *
		from
		(
		    select
		       *
		    from
		        match
			where
				(team_name = #{team_name} or away_team_name = #{team_name})
				and away_teamscore is not null
		    order by
		        match_no desc
		)
		where
		    rownum = 1
	</select>
	
	<select id="selectMatch3" parameterType="String" resultType="MatchDTO">
		    select
		       *
		    from
		        match
			where
				team_name = #{team_name} or away_team_name = #{team_name} 
				
				and away_teamscore!=null
		    order by
		        matchdate desc

	</select>
	
	<select id="countHead" parameterType="String" resultType="int">
	select count(*) from player where team_name = #{team_name} and authority > 0
	</select>
</mapper>